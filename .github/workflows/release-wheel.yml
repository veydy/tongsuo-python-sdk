name: Release Wheel
permissions:
  contents: read
on: workflow_dispatch

env:
  TONGSUO_VERSION: 8.3.2

jobs:
  sdist:
    runs-on: ubuntu-latest
    name: sdists
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          # The tag to build or the tag received by the tag event
          ref: ${{ github.event.inputs.version || github.ref }}
          persist-credentials: false

      - run: python -m venv .venv
      - name: Install Python dependencies
        run: .venv/bin/pip install -U pip cffi
      - name: Make sdist
        run: .venv/bin/python setup.py sdist
      - uses: actions/upload-artifact@v3.1.1
        with:
          name: "tongsuopy-sdist"
          path: dist/tongsuopy*

  manylinux:
    needs: [sdist]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/tongsuo-project/${{ matrix.MANYLINUX.CONTAINER }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        PYTHON:
          - { VERSION: "cp36-cp36m", ABI_VERSION: 'cp36' }
          - { VERSION: "pp38-pypy38_pp73" }
          - { VERSION: "pp39-pypy39_pp73" }
        MANYLINUX:
          - { NAME: "manylinux2014_x86_64", CONTAINER: "tongsuopy-manylinux2014:x86_64" }
          - { NAME: "manylinux_2_24_x86_64", CONTAINER: "tongsuopy-manylinux_2_24:x86_64"}
          - { NAME: "manylinux_2_28_x86_64", CONTAINER: "tongsuopy-manylinux_2_28:x86_64"}
          - { NAME: "musllinux_1_1_x86_64", CONTAINER: "tongsuopy-musllinux_1_1:x86_64"}
        exclude:
          # There are no readily available PyPy distributions
          - PYTHON: { VERSION: "pp38-pypy38_pp73" }
            MANYLINUX: { NAME: "musllinux_1_1_x86_64", CONTAINER: "tongsuopy-musllinux_1_1:x86_64"}
          - PYTHON: { VERSION: "pp39-pypy39_pp73" }
            MANYLINUX: { NAME: "musllinux_1_1_x86_64", CONTAINER: "tongsuopy-musllinux_1_1:x86_64"}
    name: "${{ matrix.PYTHON.VERSION }} for ${{ matrix.MANYLINUX.NAME }}"
    steps:
      - uses: actions/download-artifact@v3.0.1
        with:
          name: tongsuopy-sdist
      - name: Set TONGSUO_HOME
        shell: bash
        run: echo "TONGSUO_HOME=${GITHUB_WORKSPACE}/tongsuo${TONGSUO_VERSION}" >> $GITHUB_ENV
      - name: Build Tongsuo
        working-directory: ${{ runner.temp }}
        run: |
          wget "https://github.com/Tongsuo-Project/Tongsuo/archive/refs/tags/${TONGSUO_VERSION}.tar.gz"
          tar zxf "${TONGSUO_VERSION}.tar.gz"
          cd "Tongsuo-${TONGSUO_VERSION}"
          ./config no-shared enable-ntls --release --prefix=${TONGSUO_HOME}
          make -s -j4
          make install_sw
          cd -
      - run: /opt/python/${{ matrix.PYTHON.VERSION }}/bin/python -m venv .venv
      - name: Install Python dependencies
        run: .venv/bin/pip install -U pip wheel cffi
      - run: tar zxvf tongsuopy*.tar.gz && rm tongsuopy*.tar.gz && mkdir tmpwheelhouse
      - name: Build the wheel
        run: |
          if [ -n "${{ matrix.PYTHON.ABI_VERSION }}" ]; then
              PY_LIMITED_API="--py-limited-api=${{ matrix.PYTHON.ABI_VERSION }}"
          fi
          cd tongsuopy*
          ../.venv/bin/python setup.py bdist_wheel $PY_LIMITED_API && mv dist/tongsuopy*.whl ../tmpwheelhouse

      - run: auditwheel repair --plat ${{ matrix.MANYLINUX.NAME }} tmpwheelhouse/tongsuopy*.whl -w wheelhouse/
      - run: unzip wheelhouse/*.whl -d execstack.check
      - run: |
          results=$(readelf -lW execstack.check/tongsuopy/backends/*.so)
          count=$(echo "$results" | grep -c 'GNU_STACK.*[R ][W ]E' || true)
          if [ "$count" -ne 0 ]; then
            exit 1
          else
            exit 0
          fi
      - run: .venv/bin/pip install tongsuopy --no-index -f wheelhouse/
      - run: |
          .venv/bin/python -c "from tongsuopy.backends.tongsuo.backend import backend;print('Loaded: ' + backend.openssl_version_text());print('Linked Against: ' + backend._ffi.string(backend._lib.OPENSSL_VERSION_TEXT).decode('ascii'))"
      - run: mkdir tongsuopy-wheelhouse
      - run: mv wheelhouse/tongsuopy*.whl tongsuopy-wheelhouse/
#       - name: Publish tongsuopy to PyPI
#         uses: pypa/gh-action-pypi-publish@release/v1
#         with:
#           password: ${{ secrets.PYPI_API_TOKEN }}
#           packages_dir: tongsuopy-wheelhouse/
#           print_hash: true
# #          repository_url: https://test.pypi.org/legacy/